{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","store/actions/index.js","axios-orders.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","hoc/Auxiliary/Auxiliary.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updateProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","res","ingredients","data","catch","err","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","error","purchaseInit","fetchOrders","userId","queryParams","orders","fetchedOrders","key","push","authSuccess","idToken","checkAuthTimeout","expirationTime","setTimeout","logout","localStorage","removeItem","auth","email","password","isSignUp","authData","returnSecureToken","url","response","console","log","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","authCheckState","getItem","instance","create","baseURL","backdrop","props","show","className","onClick","clicked","Modal","nextProps","nextState","this","children","modalClosed","style","transform","opacity","Component","button","btnClasses","btnType","join","disabled","spinner","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","requestInterceptor","interceptors","request","use","req","responseInterceptor","eject","message","BurgerIngredient","ingredient","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","module","exports","logo","src","burgerLogo","alt","navigationItem","to","link","exact","navigationItems","isAuthenticated","drawerToggle","toolbar","drawerToggleClicked","isAuth","sideDrawer","attachedClasses","open","Backdrop","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","connect","aux","buildControl","label","removed","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","OrderSummary","ingredientSummary","textTransform","Button","purchaseCanceled","purchaseContinued","Burgerbuilder","purchasing","purchaseHandler","isAutheticated","onAuthSetRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disableInfo","ings","orderSummary","Spinner","Burger","onIngredientAdd","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","actions","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","asyncOrders","asyncAuth","App","onTryAutoSignup","routes","BurgerBuilder","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","loading","purchased","purchaseBurgerStart","newOrder","purchaseBurgerFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authRedirectPath","authStart","authFail","authLogout","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b95800e.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\n\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";","export const updateObject = (oldObject, updateProperties) => {\r\n    return{\r\n        ...oldObject,\r\n        ...updateProperties\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if(rules.isEmail ) {\r\n        const pattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if(rules.isNumeric){\r\n        const pattern =/^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return  {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n        .then(res => {\r\n            dispatch(setIngredients(res.data));\r\n        })\r\n        .catch(err =>{\r\n            dispatch(fetchIngredientsFailed());\r\n        })\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(res => {\r\n                dispatch(purchaseBurgerSuccess(res.data.name, orderData));\r\n            })\r\n            .catch(err => {\r\n                dispatch(purchaseBurgerFail(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrderStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrderStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'\r\n        axios.get('/orders.json'+ queryParams)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for(let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id:key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            })\r\n    }\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000)\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAKypMIW87cOrrMkqrfRlCGDmv6E_5DxSg';\r\n        if (!isSignUp) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAKypMIW87cOrrMkqrfRlCGDmv6E_5DxSg'\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response);\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate < new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            }\r\n        }\r\n    }\r\n}","export {\r\naddIngredient,\r\nremoveIngredient,\r\ninitIngredients\r\n} from './burgerBuilder';\r\n\r\nexport { \r\n    purchaseBurger,\r\n    purchaseInit,\r\n    fetchOrders\r\n} from './order';\r\n\r\nexport {\r\n    auth,\r\n    logout,\r\n    setAuthRedirectPath,\r\n    authCheckState\r\n} from './auth';","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-max-burger-builder-acb42.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> :  null\r\n);\r\n\r\nexport default backdrop;\r\n","import React, { Fragment, Component } from 'react';\r\nimport './Modal.css'\r\nimport Backdrop from './../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div className=\"Modal\"\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport \"./Button.css\";\r\n\r\nconst button = (props) => {\r\n    const btnClasses = ['Button', props.btnType].join(\" \")\r\n return(\r\n    <button \r\n    disabled={props.disabled}\r\n    className={btnClasses}\r\n    onClick={props.clicked}> {props.children}</button>\r\n )};\r\n\r\nexport default button;\r\n","import React from 'react';\r\n\r\nimport \"./Spinner.css\"\r\n\r\nconst spinner =  () => (\r\n    <div className=\"Loader\">Loading...</div>\r\n)\r\n\r\nexport default spinner;\r\n","import React, { Fragment, Component } from 'react';\r\nimport Modal from './../../components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n\r\n        constructor(props){\r\n            super(props);\r\n            this.requestInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({\r\n                    error: null\r\n                })\r\n                return req;\r\n            })\r\n\r\n            this.responseInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({\r\n                    error: error\r\n                })\r\n            })\r\n        }\r\n        \r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.requestInterceptor);\r\n            axios.interceptors.response.eject(this.responseInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({\r\n                error: null\r\n            })\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Fragment>\r\n                    <Modal \r\n                    show={this.state.error}\r\n                    modalClosed={this.errorConfirmedHandler}>\r\n                    {this.state.error ? this.state.error.message : null}\r\n                </Modal>\r\n                    <WrappedComponent {...this.props}></WrappedComponent>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./BurgerIngredient.css\"\r\n\r\nclass BurgerIngredient extends Component {\r\n\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className=\"BreadBottom\"></div>\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className=\"BreadTop\">\r\n                        <div className=\"Seeds1\"></div>\r\n                        <div className=\"Seeds2\"></div>\r\n                    </div>);\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className=\"Meat\"></div>\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className=\"Bacon\"></div>\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className=\"Salad\"></div>\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className=\"Cheese\"></div>\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from 'react';\r\nimport \"./Burger.css\";\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />\r\n            })\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        }, [])\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default burger;\r\n","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React from 'react';\r\nimport \"./Logo.css\"\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\n\r\nconst logo = (props) => (\r\n    <div className=\"Logo\">\r\n        <img src={burgerLogo} alt=\"Deli Burger\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo;\r\n","import React from 'react';\r\nimport \"./NavigationItem.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst navigationItem = props => {\r\n\r\n    return (\r\n        <li className=\"NavigationItem\">\r\n            <NavLink to={props.link} exact> \r\n                {props.children}</NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nexport default navigationItem;\r\n","import React from 'react';\r\nimport \"./NavigationItems.css\"\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = props => (\r\n    <ul className=\"NavigationItems\">\r\n        <NavigationItem link=\"/\">Burger Builder</NavigationItem>\r\n        {props.isAuthenticated \r\n        ? <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n        : null}\r\n        { !props.isAuthenticated \r\n        ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n        : <NavigationItem link=\"/logout\">Logout</NavigationItem>\r\n        }\r\n    </ul>\r\n\r\n)\r\n\r\nexport default navigationItems;\r\n","import React from 'react';\r\nimport './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div onClick={props.clicked} className=\"DrawerToggle\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default drawerToggle;\r\n","import React from 'react';\r\nimport \"./Toolbar.css\";\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from './../NavigationItems/NavigationItems';\r\nimport DrawerToggle from './../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className=\"Toolbar\">\r\n        <DrawerToggle clicked={props.drawerToggleClicked}></DrawerToggle>\r\n        <div className=\"LogoToolbar\">\r\n            <Logo />\r\n        </div>\r\n        <nav className=\"DesktopOnly\">\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default toolbar;","import React, { Fragment } from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from './../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nimport \"./SideDrawer.css\"\r\n\r\nconst sideDrawer = props => {\r\n    let attachedClasses = [\"SideDrawer\", \"Close\"];\r\n    if(props.open){\r\n        attachedClasses = [\"SideDrawer\", \"Open\"]\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Backdrop show={props.open} clicked={props.closed}></Backdrop>\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <div className=\"LogoSideDrawer\">\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth} ></NavigationItems>\r\n                </nav>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default sideDrawer;\r\n","import React, { Fragment, Component } from 'react';\r\nimport \"./Layout.css\"\r\nimport {connect} from 'react-redux';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({\r\n            showSideDrawer: false\r\n        });\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Toolbar isAuth={this.props.isAuthenticated} drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer isAuth={this.props.isAuthenticated} open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}></SideDrawer>\r\n                <main className=\"Content\">\r\n                    {this.props.children}\r\n                </main>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state=> {\r\n    return{\r\n        isAuthenticated: state.auth.token !==null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react'\r\nimport \"./BuildControl.css\"\r\n\r\nconst buildControl = (props) => {\r\n    return (\r\n        <div className=\"BuildControl\">\r\n            <div className=\"Label\">{props.label}</div>\r\n            <button className=\"Less\"onClick={props.removed} disabled={props.disabled} >Less</button>\r\n            <button className=\"More\" onClick={props.added} >More</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buildControl;\r\n","import React from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport \"./BuildControls.css\"\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n];\r\n\r\nconst buildControls = (props) => {\r\n    return (\r\n        <div className=\"BuildControls\">\r\n            <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n            {controls.map(ctrl => (\r\n                <BuildControl\r\n                 key={ctrl.label} \r\n                 label={ctrl.label}\r\n                 added={() => props.ingredientAdded(ctrl.type)} \r\n                 removed={() => props.ingredientRemoved(ctrl.type)}\r\n                 disabled={props.disabled[ctrl.type]} />\r\n            ))}\r\n            <button className=\"OrderButton\"\r\n                    disabled={!props.purchasable}\r\n                    onClick={props.ordered}>\r\n            {props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buildControls;\r\n","import React,{ Fragment, Component } from 'react';\r\n\r\nimport Button from './../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n\r\n    // This could be a functional component \r\n    // componentWillUpdate(){\r\n    //     console.log('[OrderSummary] will update');\r\n    // }\r\n\r\n    render(){\r\n\r\n        const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\r\n            return <li key={igKey}>\r\n                <span style={{textTransform:'capitalize'}}>{igKey}</span>:{this.props.ingredients[igKey]}\r\n                </li>\r\n        });\r\n\r\n        return (\r\n            <Fragment>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}> CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}> CONTINUE</Button>\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OrderSummary;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios-orders';\r\n\r\nimport Burger from './../../components/Burger/Burger';\r\nimport BuildControls from './../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from './../../components/UI/Modal/Modal';\r\nimport OrderSummary from './../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from './../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from './../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nexport class Burgerbuilder extends Component {\r\n\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.onInitIngredients();\r\n       \r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            }).reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAutheticated) {\r\n            this.setState({\r\n                purchasing: true\r\n            });\r\n        }else{\r\n            this.props.onAuthSetRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false })\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render() {\r\n        const disableInfo = {\r\n            ...this.props.ings\r\n        };\r\n\r\n        for (let key in disableInfo) {\r\n            disableInfo[key] = disableInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!! Try again later!</p> :<Spinner></Spinner>\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n            <Fragment>\r\n                <Burger ingredients={this.props.ings} />\r\n                <BuildControls\r\n                    ingredientAdded={this.props.onIngredientAdd}\r\n                    ingredientRemoved={this.props.onIngredientRemoved}\r\n                    disabled={disableInfo}\r\n                    purchasable={this.updatePurchaseState(this.props.ings)}\r\n                    price={this.props.price}\r\n                    isAuth = {this.props.isAutheticated}\r\n                    ordered={this.purchaseHandler} />\r\n            </Fragment>\r\n            )\r\n\r\n            orderSummary = <OrderSummary\r\n            ingredients={this.props.ings}\r\n            price={this.props.price}\r\n            purchaseCanceled={this.purchaseCancelHandler}\r\n            purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAutheticated: state.auth.token != null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        onIngredientAdd: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onAuthSetRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Burgerbuilder, axios));","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        this.props.onLogout()\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to='/'></Redirect>\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout);","import React, {Component} from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state= {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount () {\r\n            importComponent()\r\n                .then(cmp => {\r\n                    this.setState({component: cmp.default});\r\n                });\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n\r\n            return C ? <C {...this.props} /> : null;\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent;","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './store/actions/index';\r\nimport './App.css';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Logout from './containers/Auth/Logout/Logout';\r\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\r\n\r\nconst asyncCheckout = asyncComponent(() => {\r\n  return import('./containers/Checkout/Checkout');\r\n});\r\n\r\nconst asyncOrders = asyncComponent(() => {\r\n  return import('./containers/Orders/Orders');\r\n});\r\n\r\nconst asyncAuth = asyncComponent(() => {\r\n  return import('./containers/Auth/Auth');\r\n});\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path='/auth' component={asyncAuth}></Route>\r\n        <Route path='/' exact component={BurgerBuilder}></Route>\r\n        <Redirect to='/'></Redirect>\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path='/checkout' component={asyncCheckout}></Route>\r\n          <Route path='/orders' component={asyncOrders}></Route>\r\n          <Route path='/auth' component={asyncAuth}></Route>\r\n          <Route path='/logout' component={Logout}></Route>\r\n          <Route path='/auth' component={asyncAuth}></Route>\r\n          <Route path='/' exact component={BurgerBuilder}></Route>\r\n          <Redirect to='/'></Redirect>\r\n        </Switch>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Layout>\r\n          {routes}\r\n        </Layout>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token != null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1,\r\n    bacon: 0.8\r\n}\r\nconst addIngredient = (state,action) =>{\r\n    const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] +1 }\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState={\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state,updatedState);\r\n}\r\n\r\nconst removeIngredient = (state,action) => {\r\n    const updatedIng = {[action.ingredientName]: state.ingredients[action.ingredientName] -1 }\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt={\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state,updatedSt);\r\n}\r\n\r\n\r\nconst setIngredients = (state,action) => {\r\n    return updateObject(state, {\r\n        ingredients: action.ingredients,\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    })\r\n}\r\n\r\nconst fetchIngredientsFailed = (state,action) => {\r\n    return updateObject(state, {error: true});\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state,action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state,action);     \r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state,action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state,action)\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, { purchased: false })\r\n}\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, { loading: true })\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n    return updateObject(state, {\r\n        loading: true,\r\n        orders: state.orders.concat(newOrder),\r\n        purchased: true\r\n    });\r\n}\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, { loading: false })\r\n}\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, { loading: true })\r\n}\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, { loading: false })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action)\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action)\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath:'/'\r\n};\r\n\r\nconst authStart = (state, action) =>{\r\n    return updateObject(state, {error: null, loading: true})\r\n}\r\n\r\nconst authSuccess = (state, action) =>{\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) =>{\r\n    return updateObject(state, {error: action.error, loading: false})\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {token: null, userId: null});\r\n};\r\n\r\nconst setAuthRedirectPath = (state,action) => {\r\n    return updateObject(state, {authRedirectPath: action.path});\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START: return authStart(state,action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state,action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state,action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from './store/reducers/auth';\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n})\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename=\"react-burger-builder\">\n            <App></App>\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}