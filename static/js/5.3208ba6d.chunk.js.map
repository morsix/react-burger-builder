{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js"],"names":["order","props","ingredients","ingName","push","name","amount","ingOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"4NA+BeA,G,OA7BD,SAACC,GAEX,IAAMC,EAAc,GAEpB,IAAK,IAAMC,KAAWF,EAAMC,YACxBA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAGlC,IAAMI,EAAYL,EAAYM,IAAI,SAAAC,GAC9B,OAAO,0BACPC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAGJ,MARD,IAQSI,EAAGJ,KARZ,KAQoBI,EAAGH,OARvB,OAUX,OACI,yBAAKW,UAAU,SACX,2CAAiBV,GACjB,qCAAU,uCAAaW,OAAOC,WAAWlB,EAAMmB,OAAOC,QAAQ,Q,wCClBpEC,E,4LAEEC,KAAKtB,MAAMuB,cAAcD,KAAKtB,MAAMwB,MAAOF,KAAKtB,MAAMyB,U,+BAItD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAOb,OALKL,KAAKtB,MAAM4B,UACZF,EAASJ,KAAKtB,MAAM0B,OAAOnB,IAAI,SAAAR,GAAK,OAChC,kBAAC,EAAD,CAAOgB,IAAKhB,EAAM8B,GAAI5B,YAAaF,EAAME,YAAakB,MAAOpB,EAAMoB,WAIvE,6BACKO,O,GAfII,aAoCNC,sBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAMjC,MAAM2B,OACpBE,QAASI,EAAMjC,MAAM6B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,SAIA,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,OAI/DM,CAA6CK,YAAiBf,EAAQgB","file":"static/js/5.3208ba6d.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Order.css\"\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n\r\n    for (const ingName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingName,\r\n            amount: props.ingredients[ingName]\r\n        })\r\n    }\r\n    const ingOutput = ingredients.map(ig=>{\r\n        return <span\r\n        style={{\r\n            textTransform: 'capitalize',\r\n            display: 'inline-block',\r\n            margin: \"0 8px\",\r\n            border: '1px solid #ccc',\r\n            padding: '5px'\r\n        }}\r\n        key={ig.name}> {ig.name} ({ig.amount})</span>\r\n    })\r\n    return (\r\n        <div className=\"Order\">\r\n            <p>Ingredients: {ingOutput}</p>\r\n            <p>Price: <strong>GBP {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order;\r\n","import React, { Component } from 'react';\r\nimport Order from './../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../store/actions/index';\r\nimport withErrorHandler from './../../hoc/withErrorHandler/withErrorHandler';\r\nimport Spinner from './../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner></Spinner>;\r\n\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order key={order.id} ingredients={order.ingredients} price={order.price} />\r\n            ))\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}